{"ast":null,"code":"var _jsxFileName = \"/Applications/Machine Learning Specialization/AI Playground/gdp-matcher/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Button, Box, Grid, Card, CardContent, Snackbar, Alert, ThemeProvider, createTheme, ToggleButtonGroup, ToggleButton } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\n\n// Create a theme with Inter font\nconst theme = createTheme({\n  typography: {\n    fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n    h3: {\n      fontWeight: 600\n    },\n    h6: {\n      fontWeight: 500\n    }\n  },\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: 500\n        }\n      }\n    },\n    MuiToggleButton: {\n      styleOverrides: {\n        root: {\n          fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: 500\n        }\n      }\n    }\n  }\n});\nfunction formatGDP(value) {\n  if (value >= 1000000000000) {\n    const trillions = value / 1000000000000;\n    return `$${trillions.toPrecision(3)}T`;\n  } else if (value >= 1000000000) {\n    const billions = value / 1000000000;\n    return `$${billions.toPrecision(3)}B`;\n  } else if (value >= 1000000) {\n    const millions = value / 1000000;\n    return `$${millions.toPrecision(3)}M`;\n  } else {\n    return `$${value.toPrecision(3)}`;\n  }\n}\nfunction formatTime(seconds) {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n}\nfunction App() {\n  _s();\n  const [gameData, setGameData] = useState(null);\n  const [matches, setMatches] = useState({});\n  const [feedback, setFeedback] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [selectedItems, setSelectedItems] = useState({\n    countries: null,\n    gdps: null,\n    flags: null,\n    exports: null\n  });\n  const [correctMatches, setCorrectMatches] = useState({});\n  const [timer, setTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning) {\n      interval = setInterval(() => {\n        setTimer(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning]);\n  const handleDifficultyChange = (event, newDifficulty) => {\n    if (newDifficulty !== null) {\n      setDifficulty(newDifficulty);\n      // Reset game state when difficulty changes\n      setMatches({});\n      setFeedback(null);\n      setShowFeedback(false);\n      setShowCompletion(false);\n      setCorrectMatches({});\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null\n      });\n      setTimer(0);\n      setIsTimerRunning(false);\n      setGameStarted(false);\n      fetchGameData(newDifficulty);\n    }\n  };\n  const fetchGameData = async (selectedDifficulty = difficulty) => {\n    try {\n      setError(null);\n      const response = await axios.get(`${API_URL}/api/game?difficulty=${selectedDifficulty}`);\n      setGameData(response.data);\n      setMatches({});\n      setFeedback(null);\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null\n      });\n      setCorrectMatches({});\n      setTimer(0);\n      setIsTimerRunning(true);\n      setGameStarted(true);\n    } catch (error) {\n      console.error('Error fetching game data:', error);\n      setError('Failed to load game data. Please make sure the backend server is running.');\n    }\n  };\n  useEffect(() => {\n    fetchGameData();\n  }, []);\n  const handleItemClick = (type, index) => {\n    setSelectedItems(prev => {\n      const newSelected = {\n        ...prev,\n        [type]: prev[type] === index ? null : index\n      };\n\n      // If we have a complete set of selections, create the match\n      if (Object.values(newSelected).every(item => item !== null)) {\n        const country = gameData.countries[newSelected.countries];\n        const gdp = gameData.gdps[newSelected.gdps];\n        const flag = gameData.flags[newSelected.flags];\n        const export_item = gameData.exports[newSelected.exports];\n        setMatches(prevMatches => ({\n          ...prevMatches,\n          [country]: {\n            gdp,\n            flag,\n            top_export: export_item,\n            indices: {\n              gdp: newSelected.gdps,\n              flag: newSelected.flags,\n              export: newSelected.exports\n            }\n          }\n        }));\n      }\n      return newSelected;\n    });\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/api/validate_matches`, {\n        matches,\n        correct_matches: gameData.correct_matches\n      });\n      setFeedback(response.data);\n      setShowFeedback(true);\n\n      // Update correct matches for visual feedback\n      const newCorrectMatches = {\n        ...correctMatches\n      }; // Preserve existing correct matches\n      Object.entries(response.data.feedback).forEach(([country, data]) => {\n        if (data.score === 3) {\n          // All matches are correct\n          newCorrectMatches[country] = true;\n        }\n      });\n      setCorrectMatches(newCorrectMatches);\n\n      // Check if all matches are correct\n      if (Object.keys(newCorrectMatches).length === 5) {\n        setShowCompletion(true);\n        setIsTimerRunning(false); // Stop the timer when all matches are correct\n      }\n\n      // Clear current selections after submission\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null\n      });\n    } catch (error) {\n      console.error('Error submitting matches:', error);\n    }\n  };\n  const handleNewGame = () => {\n    setShowCompletion(false);\n    fetchGameData();\n  };\n  const renderColumn = (type, items) => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: 400,\n      p: 2\n    },\n    children: items.map((item, index) => {\n      const isSelected = selectedItems[type] === index;\n\n      // Determine if this item is part of a correct match\n      let isPartOfCorrectMatch = false;\n      if (type === 'countries') {\n        isPartOfCorrectMatch = correctMatches[item] === true;\n      } else {\n        // For other columns, check if they're part of any correct match\n        Object.entries(correctMatches).forEach(([country, isCorrect]) => {\n          if (isCorrect) {\n            const correctData = gameData.correct_matches[country];\n            const matchData = matches[country];\n            if (matchData && matchData.indices) {\n              // Check both the value and the index to ensure uniqueness\n              if (item === correctData[type === 'gdps' ? 'gdp' : type === 'flags' ? 'flag' : 'top_export'] && index === matchData.indices[type === 'gdps' ? 'gdp' : type === 'flags' ? 'flag' : 'export']) {\n                isPartOfCorrectMatch = true;\n              }\n            }\n          }\n        });\n      }\n      return /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => !isPartOfCorrectMatch && handleItemClick(type, index),\n        sx: {\n          mb: 2,\n          cursor: isPartOfCorrectMatch ? 'default' : 'pointer',\n          height: '100px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '2px solid #D0D0D0',\n          backgroundColor: isPartOfCorrectMatch ? '#157000' : isSelected ? '#4CAF50' : '#f9f9f9',\n          color: isPartOfCorrectMatch ? 'white' : 'inherit',\n          '&:hover': {\n            boxShadow: isPartOfCorrectMatch ? 0 : 3\n          },\n          opacity: isPartOfCorrectMatch ? 1 : 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            width: '100%',\n            textAlign: 'center'\n          },\n          children: type === 'flags' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item,\n            alt: \"Country flag\",\n            style: {\n              width: 'auto',\n              height: '60px',\n              objectFit: 'contain'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: type === 'gdps' ? '1.1rem' : type === 'exports' ? '0.6rem' : '1.2rem',\n              fontWeight: type === 'gdps' ? 'bold' : 'normal'\n            },\n            children: type === 'gdps' ? formatGDP(Number(item)) : item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, `${type}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 21\n  }, this);\n  if (!gameData) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"Loading game data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h1\",\n          sx: {\n            color: 'navy'\n          },\n          children: \"GDP Matcher Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), gameStarted && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            fontFamily: 'monospace',\n            color: 'navy',\n            fontWeight: 600\n          },\n          children: formatTime(timer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4,\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: difficulty,\n          exclusive: true,\n          onChange: handleDifficultyChange,\n          \"aria-label\": \"game difficulty\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"easy\",\n            \"aria-label\": \"easy mode\",\n            children: \"Easy (GDP > $500B)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"medium\",\n            \"aria-label\": \"medium mode\",\n            children: \"Medium (GDP > $10B)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"hard\",\n            \"aria-label\": \"hard mode\",\n            children: \"Hard (All Countries)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              p: 2,\n              align: \"center\",\n              sx: {\n                color: '#1695ff'\n              } // Light blue\n              ,\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), renderColumn('countries', gameData.countries)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              p: 2,\n              align: \"center\",\n              sx: {\n                color: '#1695ff'\n              } // Light blue\n              ,\n              children: \"GDP (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), renderColumn('gdps', gameData.gdps)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              p: 2,\n              align: \"center\",\n              sx: {\n                color: '#1695ff'\n              } // Light blue\n              ,\n              children: \"Flag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), renderColumn('flags', gameData.flags)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              p: 2,\n              align: \"center\",\n              sx: {\n                color: '#1695ff'\n              } // Light blue\n              ,\n              children: \"Top Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), renderColumn('exports', gameData.exports)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          disabled: Object.values(selectedItems).some(item => item === null),\n          sx: {\n            minWidth: '120px'\n          },\n          children: \"Submit Matches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => fetchGameData(),\n          sx: {\n            minWidth: '120px'\n          },\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showFeedback,\n        autoHideDuration: 3000,\n        onClose: () => setShowFeedback(false),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          onClose: () => setShowFeedback(false),\n          children: [Object.keys(correctMatches).length, \"/5 matches correct\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showCompletion,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          onClose: () => setShowCompletion(false),\n          sx: {\n            width: '100%',\n            '& .MuiAlert-message': {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Great job! Do you want to play again?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            onClick: handleNewGame,\n            sx: {\n              ml: 2\n            },\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"THI6zOWyKCuyQNaZofXy6YaAUI4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Button","Box","Grid","Card","CardContent","Snackbar","Alert","ThemeProvider","createTheme","ToggleButtonGroup","ToggleButton","axios","jsxDEV","_jsxDEV","API_URL","theme","typography","fontFamily","h3","fontWeight","h6","components","MuiButton","styleOverrides","root","MuiToggleButton","formatGDP","value","trillions","toPrecision","billions","millions","formatTime","seconds","mins","Math","floor","secs","toString","padStart","App","_s","gameData","setGameData","matches","setMatches","feedback","setFeedback","showFeedback","setShowFeedback","showCompletion","setShowCompletion","error","setError","difficulty","setDifficulty","selectedItems","setSelectedItems","countries","gdps","flags","exports","correctMatches","setCorrectMatches","timer","setTimer","isTimerRunning","setIsTimerRunning","gameStarted","setGameStarted","interval","setInterval","prev","clearInterval","handleDifficultyChange","event","newDifficulty","fetchGameData","selectedDifficulty","response","get","data","console","handleItemClick","type","index","newSelected","Object","values","every","item","country","gdp","flag","export_item","prevMatches","top_export","indices","export","handleSubmit","post","correct_matches","newCorrectMatches","entries","forEach","score","keys","length","handleNewGame","renderColumn","items","sx","minHeight","p","children","map","isSelected","isPartOfCorrectMatch","isCorrect","correctData","matchData","onClick","mb","cursor","height","display","alignItems","justifyContent","border","backgroundColor","color","boxShadow","opacity","width","textAlign","src","alt","style","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","Number","maxWidth","py","variant","component","exclusive","onChange","container","spacing","xs","md","elevation","align","mt","gap","disabled","some","minWidth","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","size","ml","_c","$RefreshReg$"],"sources":["/Applications/Machine Learning Specialization/AI Playground/gdp-matcher/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Button,\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Snackbar,\n  Alert,\n  ThemeProvider,\n  createTheme,\n  ToggleButtonGroup,\n  ToggleButton,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:5000';\n\n// Create a theme with Inter font\nconst theme = createTheme({\n  typography: {\n    fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n    h3: {\n      fontWeight: 600,\n    },\n    h6: {\n      fontWeight: 500,\n    },\n  },\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: 500,\n        },\n      },\n    },\n    MuiToggleButton: {\n      styleOverrides: {\n        root: {\n          fontFamily: '\"Inter\", \"Helvetica\", \"Arial\", sans-serif',\n          fontWeight: 500,\n        },\n      },\n    },\n  },\n});\n\nfunction formatGDP(value) {\n  if (value >= 1_000_000_000_000) {\n    const trillions = value / 1_000_000_000_000;\n    return `$${trillions.toPrecision(3)}T`;\n  } else if (value >= 1_000_000_000) {\n    const billions = value / 1_000_000_000;\n    return `$${billions.toPrecision(3)}B`;\n  } else if (value >= 1_000_000) {\n    const millions = value / 1_000_000;\n    return `$${millions.toPrecision(3)}M`;\n  } else {\n    return `$${value.toPrecision(3)}`;\n  }\n}\n\nfunction formatTime(seconds) {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n}\n\nfunction App() {\n  const [gameData, setGameData] = useState(null);\n  const [matches, setMatches] = useState({});\n  const [feedback, setFeedback] = useState(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [error, setError] = useState(null);\n  const [difficulty, setDifficulty] = useState('medium');\n  const [selectedItems, setSelectedItems] = useState({\n    countries: null,\n    gdps: null,\n    flags: null,\n    exports: null,\n  });\n  const [correctMatches, setCorrectMatches] = useState({});\n  const [timer, setTimer] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  useEffect(() => {\n    let interval;\n    if (isTimerRunning) {\n      interval = setInterval(() => {\n        setTimer(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning]);\n\n  const handleDifficultyChange = (event, newDifficulty) => {\n    if (newDifficulty !== null) {\n      setDifficulty(newDifficulty);\n      // Reset game state when difficulty changes\n      setMatches({});\n      setFeedback(null);\n      setShowFeedback(false);\n      setShowCompletion(false);\n      setCorrectMatches({});\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null,\n      });\n      setTimer(0);\n      setIsTimerRunning(false);\n      setGameStarted(false);\n      fetchGameData(newDifficulty);\n    }\n  };\n\n  const fetchGameData = async (selectedDifficulty = difficulty) => {\n    try {\n      setError(null);\n      const response = await axios.get(`${API_URL}/api/game?difficulty=${selectedDifficulty}`);\n      setGameData(response.data);\n      setMatches({});\n      setFeedback(null);\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null,\n      });\n      setCorrectMatches({});\n      setTimer(0);\n      setIsTimerRunning(true);\n      setGameStarted(true);\n    } catch (error) {\n      console.error('Error fetching game data:', error);\n      setError('Failed to load game data. Please make sure the backend server is running.');\n    }\n  };\n\n  useEffect(() => {\n    fetchGameData();\n  }, []);\n\n  const handleItemClick = (type, index) => {\n    setSelectedItems(prev => {\n      const newSelected = {\n        ...prev,\n        [type]: prev[type] === index ? null : index\n      };\n      \n      // If we have a complete set of selections, create the match\n      if (Object.values(newSelected).every(item => item !== null)) {\n        const country = gameData.countries[newSelected.countries];\n        const gdp = gameData.gdps[newSelected.gdps];\n        const flag = gameData.flags[newSelected.flags];\n        const export_item = gameData.exports[newSelected.exports];\n        \n        setMatches(prevMatches => ({\n          ...prevMatches,\n          [country]: {\n            gdp,\n            flag,\n            top_export: export_item,\n            indices: {\n              gdp: newSelected.gdps,\n              flag: newSelected.flags,\n              export: newSelected.exports\n            }\n          }\n        }));\n      }\n      \n      return newSelected;\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/api/validate_matches`, {\n        matches,\n        correct_matches: gameData.correct_matches,\n      });\n      setFeedback(response.data);\n      setShowFeedback(true);\n\n      // Update correct matches for visual feedback\n      const newCorrectMatches = { ...correctMatches }; // Preserve existing correct matches\n      Object.entries(response.data.feedback).forEach(([country, data]) => {\n        if (data.score === 3) { // All matches are correct\n          newCorrectMatches[country] = true;\n        }\n      });\n      setCorrectMatches(newCorrectMatches);\n\n      // Check if all matches are correct\n      if (Object.keys(newCorrectMatches).length === 5) {\n        setShowCompletion(true);\n        setIsTimerRunning(false); // Stop the timer when all matches are correct\n      }\n\n      // Clear current selections after submission\n      setSelectedItems({\n        countries: null,\n        gdps: null,\n        flags: null,\n        exports: null,\n      });\n    } catch (error) {\n      console.error('Error submitting matches:', error);\n    }\n  };\n\n  const handleNewGame = () => {\n    setShowCompletion(false);\n    fetchGameData();\n  };\n\n  const renderColumn = (type, items) => (\n    <Box sx={{ minHeight: 400, p: 2 }}>\n      {items.map((item, index) => {\n        const isSelected = selectedItems[type] === index;\n        \n        // Determine if this item is part of a correct match\n        let isPartOfCorrectMatch = false;\n        if (type === 'countries') {\n          isPartOfCorrectMatch = correctMatches[item] === true;\n        } else {\n          // For other columns, check if they're part of any correct match\n          Object.entries(correctMatches).forEach(([country, isCorrect]) => {\n            if (isCorrect) {\n              const correctData = gameData.correct_matches[country];\n              const matchData = matches[country];\n              if (matchData && matchData.indices) {\n                // Check both the value and the index to ensure uniqueness\n                if (item === correctData[type === 'gdps' ? 'gdp' : type === 'flags' ? 'flag' : 'top_export'] &&\n                    index === matchData.indices[type === 'gdps' ? 'gdp' : type === 'flags' ? 'flag' : 'export']) {\n                  isPartOfCorrectMatch = true;\n                }\n              }\n            }\n          });\n        }\n        \n        return (\n          <Card\n            key={`${type}-${index}`}\n            onClick={() => !isPartOfCorrectMatch && handleItemClick(type, index)}\n            sx={{\n              mb: 2,\n              cursor: isPartOfCorrectMatch ? 'default' : 'pointer',\n              height: '100px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              border: '2px solid #D0D0D0',\n              backgroundColor: isPartOfCorrectMatch ? '#157000' : isSelected ? '#4CAF50' : '#f9f9f9',\n              color: isPartOfCorrectMatch ? 'white' : 'inherit',\n              '&:hover': {\n                boxShadow: isPartOfCorrectMatch ? 0 : 3,\n              },\n              opacity: isPartOfCorrectMatch ? 1 : 1,\n            }}\n          >\n            <CardContent sx={{ width: '100%', textAlign: 'center' }}>\n              {type === 'flags' ? (\n                <img\n                  src={item}\n                  alt=\"Country flag\"\n                  style={{\n                    width: 'auto',\n                    height: '60px',\n                    objectFit: 'contain',\n                  }}\n                />\n              ) : (\n                <Typography\n                  sx={{\n                    fontSize: type === 'gdps' ? '1.1rem' : type === 'exports' ? '0.6rem' : '1.2rem',\n                    fontWeight: type === 'gdps' ? 'bold' : 'normal',\n                  }}\n                >\n                  {type === 'gdps' ? formatGDP(Number(item)) : item}\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        );\n      })}\n    </Box>\n  );\n\n  if (error) return <Typography color=\"error\">{error}</Typography>;\n  if (!gameData) return <Typography>Loading game data...</Typography>;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n          <Typography \n            variant=\"h3\" \n            component=\"h1\"\n            sx={{ color: 'navy' }}\n          >\n            GDP Matcher Game\n          </Typography>\n          {gameStarted && (\n            <Typography \n              variant=\"h4\" \n              sx={{ \n                fontFamily: 'monospace',\n                color: 'navy',\n                fontWeight: 600\n              }}\n            >\n              {formatTime(timer)}\n            </Typography>\n          )}\n        </Box>\n\n        <Box sx={{ mb: 4, display: 'flex', justifyContent: 'center' }}>\n          <ToggleButtonGroup\n            value={difficulty}\n            exclusive\n            onChange={handleDifficultyChange}\n            aria-label=\"game difficulty\"\n          >\n            <ToggleButton value=\"easy\" aria-label=\"easy mode\">\n              Easy (GDP &gt; $500B)\n            </ToggleButton>\n            <ToggleButton value=\"medium\" aria-label=\"medium mode\">\n              Medium (GDP &gt; $10B)\n            </ToggleButton>\n            <ToggleButton value=\"hard\" aria-label=\"hard mode\">\n              Hard (All Countries)\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={3}>\n            <Paper elevation={3}>\n              <Typography \n                variant=\"h6\" \n                p={2} \n                align=\"center\"\n                sx={{ color: '#1695ff' }} // Light blue\n              >\n                Country\n              </Typography>\n              {renderColumn('countries', gameData.countries)}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Paper elevation={3}>\n              <Typography \n                variant=\"h6\" \n                p={2} \n                align=\"center\"\n                sx={{ color: '#1695ff' }} // Light blue\n              >\n                GDP (USD)\n              </Typography>\n              {renderColumn('gdps', gameData.gdps)}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Paper elevation={3}>\n              <Typography \n                variant=\"h6\" \n                p={2} \n                align=\"center\"\n                sx={{ color: '#1695ff' }} // Light blue\n              >\n                Flag\n              </Typography>\n              {renderColumn('flags', gameData.flags)}\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Paper elevation={3}>\n              <Typography \n                variant=\"h6\" \n                p={2} \n                align=\"center\"\n                sx={{ color: '#1695ff' }} // Light blue\n              >\n                Top Export\n              </Typography>\n              {renderColumn('exports', gameData.exports)}\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: 4, display: 'flex', justifyContent: 'center', gap: 2 }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n            disabled={Object.values(selectedItems).some(item => item === null)}\n            sx={{ minWidth: '120px' }}\n          >\n            Submit Matches\n          </Button>\n          <Button\n            variant=\"outlined\"\n            onClick={() => fetchGameData()}\n            sx={{ minWidth: '120px' }}\n          >\n            New Game\n          </Button>\n        </Box>\n\n        <Snackbar\n          open={showFeedback}\n          autoHideDuration={3000}\n          onClose={() => setShowFeedback(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        >\n          <Alert severity=\"success\" onClose={() => setShowFeedback(false)}>\n            {Object.keys(correctMatches).length}/5 matches correct\n          </Alert>\n        </Snackbar>\n\n        <Snackbar\n          open={showCompletion}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            severity=\"success\" \n            onClose={() => setShowCompletion(false)}\n            sx={{ \n              width: '100%',\n              '& .MuiAlert-message': {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              }\n            }}\n          >\n            <span>Great job! Do you want to play again?</span>\n            <Button \n              variant=\"contained\" \n              size=\"small\" \n              onClick={handleNewGame}\n              sx={{ ml: 2 }}\n            >\n              Play Again\n            </Button>\n          </Alert>\n        </Snackbar>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}